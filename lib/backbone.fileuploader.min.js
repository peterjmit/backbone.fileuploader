/*!
 * backbone.fileuploader.js v0.0.1
 * Copyright 2013, Peter Mitchell (@peterjmit)
 * backbone.fileuploader.js may be distributed under the MIT licence
 */
(function(e){"use strict";var t=e.Backbone,i=e._;e.$;var n="Files",l=t.Model.extend({defaults:{name:null,size:null,lastModifiedDate:null,type:null,data:null,isImage:!1},browserFileObj:null,setFileObj:function(e){var t={};this.browserFileObj=e,i.each(this.defaults,function(i,n){var l=e[n];l&&(t[n]=l)}),i.extend(t,{isImage:!!e.type.match("image/*")}),this.set(t)}}),o=t.Collection.extend({model:l}),s=t.View.extend({files:null,fileReaderEvents:{onloadstart:null,onprogress:null,onabort:null,onerror:null,onload:"onFileLoad",onloadend:null},constructor:function s(e){e=e||{},this.setupFileUploader(),t.View.call(this,e)},setupFileUploader:function(){this.files=new this.options.FileCollection(null,{model:this.options.FileModel}),this.events=this.events||{},this.options.dragAndDrop&&(this.events.dragover="onDrag",this.events.drop="onDrop"),this.events["change input[type=file]"]="onFormChange",this.options.paste&&(this.events.paste="onPaste")},onFormChange:function(e){e.stopPropagation(),e.preventDefault(),this.addFiles(e.target.files)},onDrag:function(e){e.stopPropagation(),e.preventDefault(),e.originalEvent.dataTransfer.dropEffect="copy"},onDrop:function(e){e.stopPropagation(),e.preventDefault(),this.addFiles(e.originalEvent.dataTransfer.files)},onPaste:function(e){var t=[],l=e.originalEvent.clipboardData;e.stopPropagation(),e.preventDefault(),i.each(l.types,function(e,i){e===n&&t.push(l.items[i].getAsFile())},this),this.addFiles(t)},addFiles:function(e){i.each(e,this.addFile,this)},addFile:function(e){var t=new this.files.model;t.setFileObj(e),this.files.add(t),t.get("isImage")&&this.handleFile(t)},handleFile:function(e){var t=new FileReader,n=i.result(this,"fileReaderEvents");i.each(n,function(n,l){n&&(n=this[n])&&(t[l]=i.bind(n,this,e))},this),t.readAsDataURL(e.browserFileObj)},onFileLoad:function(e,t){e.set({data:t.target.result})},render:function(e){this.$el.html(this.options.template()),e(this.el)}});s.prototype.options={dragAndDrop:!0,paste:!1,template:i.template('<div class="drop-area"></div><input type="file" name="files[]" multiple />'),FileModel:l,FileCollection:o},t.FileUploader=s})("object"==typeof global?global:this);